apiVersion: v1
kind: PersistentVolume
metadata:
  name: wpdocroot
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: nfs-nfs-server-gcp.default.svc.cluster.local
    path: "/"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: wpdocroot
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  labels:
    app: wordpress
    role: wp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: wordpress
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress
        tier: frontend
    spec:
      serviceAccountName: poc-k8s-sa
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: wpdocroot
      - name: php-options-volume
        configMap:
          name: php-options-configmap
          items:
          - key: "custom.ini"
            path: "custom.ini"
      containers:
      - name: wordpress
        image: wordpress:5.8.2-php8.0-apache
        # This excessive command would obviously be built into a container if not for time pressures
        command:
        - "/bin/sh"
        - "-c"
        - "export DEBIAN_FRONTEND=noninteractive; apt update; apt install libzstd-dev; pecl install igbinary && docker-php-ext-enable igbinary; yes | pecl install redis && docker-php-ext-enable redis; /usr/local/bin/docker-entrypoint.sh apache2; apache2-foreground"
        env:
        - name: WORDPRESS_DB_HOST
          valueFrom:
            secretKeyRef:
              name: wordpress-db
              key: host
        - name: WORDPRESS_DB_USER
          valueFrom:
            secretKeyRef:
              name: wordpress-db
              key: user
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: wordpress-db
              key: password
        - name: WORDPRESS_DB_NAME
          valueFrom:
            secretKeyRef:
              name: wordpress-db
              key: db
        envFrom:
        - configMapRef:
            name: wordpress-options-configmap
        ports:
        - containerPort: 80
          name: wp-svc
        volumeMounts:
        - name: wordpress-persistent-storage
          mountPath: /var/www/html
        - name: php-options-volume
          mountPath: /usr/local/etc/php/conf.d/custom.ini
          subPath: custom.ini
      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:latest
        command:
          - "/cloud_sql_proxy"
          - "-ip_address_types=PRIVATE"
          - "-instances=jetstack-gke-335118:europe-west2:poc-sql=tcp:3306"
        securityContext:
          runAsNonRoot: true
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress
  labels:
    app: wordpress
spec:
  ports:
    - port: 80
      targetPort: 80
      name: wp-svc
  selector:
    app: wordpress
    tier: frontend
  type: ClusterIP
